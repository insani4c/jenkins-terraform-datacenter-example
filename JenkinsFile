pipeline{
    agent any
    tools {
        "org.jenkinsci.plugins.terraform.TerraformInstallation" "Terraform 20706"
    }
    environment {
        TF_HOME = tool('Terraform 20706')
        TF_IN_AUTOMATION = "true"
        PATH = "$TF_HOME:$PATH"
    }
    stages {

        stage('Terraform Init'){
            steps {
                ansiColor('xterm') {
                    dir('terraform-libvirt'){
                        git branch: 'main', url: 'https://github.com/insani4c/terraform-libvirt'

                        printf '\e[36mInitializing Terraform\e[0m'
                        sh '''
                        cd deployment
                        terraform init --upgrade --reconfigure
                        '''
                    }
                }
            }
        }

        stage('Terraform Validate'){
            steps {
                ansiColor('xterm') {
                    dir('terraform-libvirt/deployment'){
                        sh '''
                        terraform validate
                        '''
                    }
                }
            }
        }

        stage('Terraform Plan'){
            steps {
                ansiColor('xterm') {
                    dir('terraform-libvirt/deployment'){
                        printf '\e[31mCreating Terraform Plan\e[0m'
                        sh '''
                            terraform plan -out /tmp/my_datacenter.plan
                        '''
                    }
                }
            }
        }

        stage('Waiting for Approval'){
            steps {
                timeout(time: 24, unit: 'HOURS') {
                    input (message: "Deploy the infrastructure?")
                }
            }

        }

        stage('Terraform Apply'){
            steps {
                ansiColor('xterm') {
                    dir('terraform-libvirt/deployment'){
                        printf '\e[32mApplying the plan\e[0m'
                        sh '''
                        terraform apply -parallelism 25 /tmp/my_datacenter.plan
                        '''
                    }
                }
            }
        }
    }
}
